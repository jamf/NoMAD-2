/*
 * Copyright (c) 2010 Apple Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Apple Inc. ("Apple") nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Portions of this software have been released under the following terms:
 *
 * (c) Copyright 1989-1993 OPEN SOFTWARE FOUNDATION, INC.
 * (c) Copyright 1989-1993 HEWLETT-PACKARD COMPANY
 * (c) Copyright 1989-1993 DIGITAL EQUIPMENT CORPORATION
 *
 * To anyone who acknowledges that this file is provided "AS IS"
 * without any express or implied warranty:
 * permission to use, copy, modify, and distribute this file for any
 * purpose is hereby granted without fee, provided that the above
 * copyright notices and this notice appears in all source code copies,
 * and that none of the names of Open Software Foundation, Inc., Hewlett-
 * Packard Company or Digital Equipment Corporation be used
 * in advertising or publicity pertaining to distribution of the software
 * without specific, written prior permission.  Neither Open Software
 * Foundation, Inc., Hewlett-Packard Company nor Digital
 * Equipment Corporation makes any representations about the suitability
 * of this software for any purpose.
 *
 * Copyright (c) 2007, Novell, Inc. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 * 3.  Neither the name of Novell Inc. nor the names of its contributors
 *     may be used to endorse or promote products derived from this
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @APPLE_LICENSE_HEADER_END@
 */

/*
**
**  NAME:
**
**      twr.idl
**
**  FACILITY:
**
**      twr
**
**  ABSTRACT:
**
**      twr Interface Definition
**
**      NOTE WELL: This file contains various things marked "*** NON-API ***".
**      The existence, signature, and semantics of anything so marked
**      is subject to change without notice and should thus not be depended
**      on by application writers.
**
**
*/

[local] interface twr
{
import  "dce/lbase.idl";

/*************************************************************************/
/*************************  Common definitions  **************************/
/*************************************************************************/

/* none */

/*************************************************************************/
/****************************  Status Codes  *****************************/
/*************************************************************************/

const long      twr_s_ok               = error_status_ok;

/* T W R _ I P _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an Internet protocol tower from an
 * Internet sockaddr
 */
void twr_ip_lower_flrs_from_sa
    (
        [in]    unsigned32        transport_layer_protocol,
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ D N E T _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of a DECnet protocol tower from a
 * DECnet sockaddr
 */
void twr_dnet_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ O S I _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an OSI protocol tower from an
 * OSI sockaddr
 */
void twr_osi_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ D D S _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of an DDS protocol tower from an
 * DDS sockaddr
 */
void twr_dds_lower_flrs_from_sa
    (
        [in]    unsigned32        transport_layer_protocol,
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ U X D _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of a Unix Domain Socket
 * protocol tower from a LRPC sockaddr
 */
void twr_uxd_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ N P _ L O W E R _ F L R S _ F R O M _ S A
 *
 *                   *** NON-API ***
 *
 * Create the canonical representation of a Named Pipe
 * protocol tower from a LRPC sockaddr
 */
void twr_np_lower_flrs_from_sa
    (
        [in]    sockaddr_p_t      sa,
        [out]   twr_p_t           *tower,
        [out]   unsigned32        *status
    );

/*
 * T W R _ I P _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an Internet sockaddr from the canonical representation of
 * an Internet protocol tower.
 */
void twr_ip_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );
/*
 * T W R _ D N E T _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create a DECnet sockaddr from the canonical representation of
 * a DECnet protocol tower.
 */
void twr_dnet_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ O S I _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an OSI sockaddr from the canonical representation of
 * an OSI protocol tower.
 */
void twr_osi_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ D D S _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an DDS sockaddr from the canonical representation of
 * an DDS protocol tower.
 */
void twr_dds_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );
/*
 * T W R _ U X D _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an UXD sockaddr (sockaddr_un) from the canonical representation of
 * an LRPC protocol tower.
 */
void twr_uxd_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

/*
 * T W R _ N P _ L O W E R _ F L R S _ T O _ S A
 *
 *                   *** NON-API ***
 *
 * Create an NP sockaddr (sockaddr_un) from the canonical representation of
 * an LRPC protocol tower.
 */
void twr_np_lower_flrs_to_sa
    (
        [in]    byte_p_t         tower_octet_string,
        [out]   sockaddr_p_t     *sa,
        [out]   unsigned32       *sa_len,
        [out]   unsigned32       *status
    );

}
